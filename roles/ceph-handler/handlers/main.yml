---
- name: handlers
  when: not rolling_update | bool
  block:
    - name: update apt cache
      apt:
        update-cache: yes
      when: ansible_os_family == 'Debian'
      register: result
      until: result is succeeded

    - name: mons handler
      include_tasks: handler_mons.yml
      when: mon_group_name in group_names
<<<<<<< HEAD

    - name: restart ceph mon daemon(s) - non container
      command: /usr/bin/env bash /tmp/restart_mon_daemon.sh
      listen: "restart ceph mons"
      when:
        # We do not want to run these checks on initial deployment (`socket.rc == 0`)
        - mon_group_name in group_names
        - not containerized_deployment | bool
        - hostvars[item]['_mon_handler_called'] | default(False) | bool
        - mon_socket_stat.rc == 0
      with_items: "{{ groups[mon_group_name] }}"
      delegate_to: "{{ item }}"
      run_once: True

    - name: restart ceph mon daemon(s) - container
      command: /usr/bin/env bash /tmp/restart_mon_daemon.sh
      listen: "restart ceph mons"
      when:
        # We do not want to run these checks on initial deployment (`socket.rc == 0`)
        - mon_group_name in group_names
        - containerized_deployment | bool
        - ceph_mon_container_stat.get('rc') == 0
        - hostvars[item]['_mon_handler_called'] | default(False) | bool
        - ceph_mon_container_stat.get('stdout_lines', [])|length != 0
      with_items: "{{ groups[mon_group_name] }}"
      delegate_to: "{{ item }}"
      run_once: True

    - name: set _mon_handler_called after restart
      set_fact:
         _mon_handler_called: False
      listen: "restart ceph mons"

    - name: set _osd_handler_called before restart
      set_fact:
         _osd_handler_called: True
      listen: "restart ceph osds"
=======
      listen: "restart ceph mons"
>>>>>>> fe9c5b8c6... ceph-handler: group listen topics and condition

    - name: osds handler
      include_tasks: handler_osds.yml
      when: osd_group_name in group_names
<<<<<<< HEAD

    - name: restart ceph osds daemon(s) - non container
      command: /usr/bin/env bash /tmp/restart_osd_daemon.sh
      listen: "restart ceph osds"
      when:
        - osd_group_name in group_names
        - not containerized_deployment | bool
        # We do not want to run these checks on initial deployment (`socket_osd_container.results[n].rc == 0`)
        # except when a crush location is specified. ceph-disk will start the osds before the osd crush location is specified
        - osd_socket_stat.rc == 0
        - ceph_current_status.fsid is defined
        - handler_health_osd_check | bool
        - hostvars[item]['_osd_handler_called'] | default(False) | bool
      with_items: "{{ groups[osd_group_name] | intersect(ansible_play_batch) }}"
      delegate_to: "{{ item }}"
      run_once: True

    - name: restart ceph osds daemon(s) - container
      command: /usr/bin/env bash /tmp/restart_osd_daemon.sh
      listen: "restart ceph osds"
      when:
        # We do not want to run these checks on initial deployment (`socket_osd_container_stat.results[n].rc == 0`)
        # except when a crush location is specified. ceph-disk will start the osds before the osd crush location is specified
        - osd_group_name in group_names
        - containerized_deployment | bool
        - ceph_osd_container_stat.get('rc') == 0
        - ceph_osd_container_stat.get('stdout_lines', [])|length != 0
        - handler_health_osd_check | bool
        - hostvars[item]['_osd_handler_called'] | default(False)
      with_items: "{{ groups[osd_group_name] | intersect(ansible_play_batch) }}"
      delegate_to: "{{ item }}"
      run_once: True

    - name: set _osd_handler_called after restart
      set_fact:
         _osd_handler_called: False
=======
>>>>>>> fe9c5b8c6... ceph-handler: group listen topics and condition
      listen: "restart ceph osds"

    - name: mdss handler
      include_tasks: handler_mdss.yml
      when: mds_group_name in group_names
<<<<<<< HEAD

    - name: restart ceph mds daemon(s) - non container
      command: /usr/bin/env bash /tmp/restart_mds_daemon.sh
      listen: "restart ceph mdss"
      when:
        # We do not want to run these checks on initial deployment (`socket.rc == 0`)
        - mds_group_name in group_names
        - not containerized_deployment | bool
        - hostvars[item]['_mds_handler_called'] | default(False) | bool
        - mds_socket_stat.rc == 0
      with_items: "{{ groups[mds_group_name] }}"
      delegate_to: "{{ item }}"
      run_once: True

    - name: restart ceph mds daemon(s) - container
      command: /usr/bin/env bash /tmp/restart_mds_daemon.sh
      listen: "restart ceph mdss"
      when:
        # We do not want to run these checks on initial deployment (`socket.rc == 0`)
        - mds_group_name in group_names
        - containerized_deployment | bool
        - ceph_mds_container_stat.get('rc') == 0
        - hostvars[item]['_mds_handler_called'] | default(False) | bool
        - ceph_mds_container_stat.get('stdout_lines', [])|length != 0
      with_items: "{{ groups[mds_group_name] }}"
      delegate_to: "{{ item }}"
      run_once: True

    - name: set _mds_handler_called after restart
      set_fact:
         _mds_handler_called: False
=======
>>>>>>> fe9c5b8c6... ceph-handler: group listen topics and condition
      listen: "restart ceph mdss"

    - name: rgws handler
      include_tasks: handler_rgws.yml
      when: rgw_group_name in group_names
<<<<<<< HEAD

    - name: restart ceph rgw daemon(s) - non container
      command: /usr/bin/env bash /tmp/restart_rgw_daemon.sh
      listen: "restart ceph rgws"
      when:
        # We do not want to run these checks on initial deployment (`socket.rc == 0`)
        - rgw_group_name in group_names
        - not containerized_deployment | bool
        - hostvars[item]['_rgw_handler_called'] | default(False) | bool
        - rgw_socket_stat.rc == 0
      with_items: "{{ groups[rgw_group_name] }}"
      delegate_to: "{{ item }}"
      run_once: True

    - name: restart ceph rgw daemon(s) - container
      command: /usr/bin/env bash /tmp/restart_rgw_daemon.sh
      listen: "restart ceph rgws"
      when:
        # We do not want to run these checks on initial deployment (`socket.rc == 0`)
        - rgw_group_name in group_names
        - containerized_deployment | bool
        - ceph_rgw_container_stat.get('rc') == 0
        - hostvars[item]['_rgw_handler_called'] | default(False) | bool
        - ceph_rgw_container_stat.get('stdout_lines', [])|length != 0
      with_items: "{{ groups[rgw_group_name] }}"
      delegate_to: "{{ item }}"
      run_once: True
=======
      listen: "restart ceph rgws"
>>>>>>> fe9c5b8c6... ceph-handler: group listen topics and condition

    - name: nfss handler
      include_tasks: handler_nfss.yml
      when: nfs_group_name in group_names
<<<<<<< HEAD

    - name: restart ceph nfs daemon(s) - non container
      command: /usr/bin/env bash /tmp/restart_nfs_daemon.sh
      listen: "restart ceph nfss"
      when:
        # We do not want to run these checks on initial deployment (`socket.rc == 0`)
        - nfs_group_name in group_names
        - not containerized_deployment | bool
        - hostvars[item]['_nfs_handler_called'] | default(False) | bool
        - nfs_socket_stat.rc == 0
      with_items: "{{ groups[nfs_group_name] }}"
      delegate_to: "{{ item }}"
      run_once: True

    - name: restart ceph nfs daemon(s) - container
      command: /usr/bin/env bash /tmp/restart_nfs_daemon.sh
      listen: "restart ceph nfss"
      when:
        # We do not want to run these checks on initial deployment (`socket.rc == 0`)
        - nfs_group_name in group_names
        - containerized_deployment | bool
        - ceph_nfs_container_stat.get('rc') == 0
        - hostvars[item]['_nfs_handler_called'] | default(False) | bool
        - ceph_nfs_container_stat.get('stdout_lines', [])|length != 0
      with_items: "{{ groups[nfs_group_name] }}"
      delegate_to: "{{ item }}"
      run_once: True

    - name: set _nfs_handler_called after restart
      set_fact:
         _nfs_handler_called: False
=======
>>>>>>> fe9c5b8c6... ceph-handler: group listen topics and condition
      listen: "restart ceph nfss"

    - name: rbdmirrors handler
      include_tasks: handler_rbdmirrors.yml
      when: rbdmirror_group_name in group_names
<<<<<<< HEAD

    - name: restart ceph rbd mirror daemon(s) - non container
      command: /usr/bin/env bash /tmp/restart_rbd_mirror_daemon.sh
      listen: "restart ceph rbdmirrors"
      when:
        # We do not want to run these checks on initial deployment (`socket.rc == 0`)
        - rbdmirror_group_name in group_names
        - not containerized_deployment | bool
        - hostvars[item]['_rbdmirror_handler_called'] | default(False) | bool
        - rbd_mirror_socket_stat.rc == 0
      with_items: "{{ groups[rbdmirror_group_name] }}"
      delegate_to: "{{ item }}"
      run_once: True

    - name: restart ceph rbd mirror daemon(s) - container
      command: /usr/bin/env bash /tmp/restart_rbd_mirror_daemon.sh
      listen: "restart ceph rbdmirrors"
      when:
        # We do not want to run these checks on initial deployment (`socket.rc == 0`)
        - rbdmirror_group_name in group_names
        - containerized_deployment | bool
        - ceph_rbd_mirror_container_stat.get('rc') == 0
        - hostvars[item]['_rbdmirror_handler_called'] | default(False) | bool
        - ceph_rbd_mirror_container_stat.get('stdout_lines', [])|length != 0
      with_items: "{{ groups[rbdmirror_group_name] }}"
      delegate_to: "{{ item }}"
      run_once: True

    - name: set _rbdmirror_handler_called after restart
      set_fact:
         _rbdmirror_handler_called: False
      listen: "restart ceph rbdmirrors"

    - name: set _mgr_handler_called before restart
      set_fact:
         _mgr_handler_called: True
      listen: "restart ceph mgrs"
=======
      listen: "restart ceph rbdmirrors"
>>>>>>> fe9c5b8c6... ceph-handler: group listen topics and condition

    - name: mgrs handler
      include_tasks: handler_mgrs.yml
      when: mgr_group_name in group_names
<<<<<<< HEAD

    - name: restart ceph mgr daemon(s) - non container
      command: /usr/bin/env bash /tmp/restart_mgr_daemon.sh
      listen: "restart ceph mgrs"
      when:
        # We do not want to run these checks on initial deployment (`socket.rc == 0`)
        - mgr_group_name in group_names
        - not containerized_deployment | bool
        - hostvars[item]['_mgr_handler_called'] | default(False) | bool
        - mgr_socket_stat.rc == 0
      with_items: "{{ groups[mgr_group_name] }}"
      delegate_to: "{{ item }}"
      run_once: True

    - name: restart ceph mgr daemon(s) - container
      command: /usr/bin/env bash /tmp/restart_mgr_daemon.sh
      listen: "restart ceph mgrs"
      when:
        # We do not want to run these checks on initial deployment (`socket.rc == 0`)
        - mgr_group_name in group_names
        - containerized_deployment | bool
        - ceph_mgr_container_stat.get('rc') == 0
        - hostvars[item]['_mgr_handler_called'] | default(False) | bool
        - ceph_mgr_container_stat.get('stdout_lines', [])|length != 0
      with_items: "{{ groups[mgr_group_name] }}"
      delegate_to: "{{ item }}"
      run_once: True

    - name: set _mgr_handler_called after restart
      set_fact:
         _mgr_handler_called: False
=======
>>>>>>> fe9c5b8c6... ceph-handler: group listen topics and condition
      listen: "restart ceph mgrs"

    - name: tcmu-runner handler
      include_tasks: handler_tcmu_runner.yml
      when: iscsi_gw_group_name in group_names
      listen: "restart ceph tcmu-runner"

    - name: rbd-target-gw handler
      include_tasks: handler_rbd_target_gw.yml
      when: iscsi_gw_group_name in group_names
      listen: "restart ceph rbd-target-gw"

    - name: rbd-target-api handler
      include_tasks: handler_rbd_target_api.yml
      when: iscsi_gw_group_name in group_names
      listen: "restart ceph rbd-target-api"
